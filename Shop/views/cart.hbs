<div class="d-flex flex-column align-items-center">
  <h1>Cart</h1>
  <div class="d-flex flex-column">
    <div class="d-flex flex-wrap cart-list">
    </div>
  </div>
</div>

<script defer>
  const AuthServerURL = "https://localhost:3113/auth"; async function
  checkToken() { const accessToken = localStorage.getItem("accessToken"); const
  res = await fetch(`${AuthServerURL}/check`, { method: "POST", headers: {
  "Content-Type": "application/json", }, body: JSON.stringify({ accessToken }),
  }); const resData = await res.json(); if (!resData.verified) { await
  refreshToken(); } } async function refreshToken() { const res = await
  fetch(`${AuthServerURL}/refresh`, { method: "POST", headers: { "Content-Type":
  "application/json", }, credentials: "include", }); const resData = await
  res.json(); localStorage.setItem("accessToken", resData.accessToken); }
  checkToken(); const productList =
  {{{productList}}}; const cart = JSON.parse(localStorage.getItem("cart")) ||
  []; const renderList = cart.reduce((obj, p) => { obj[p] =
  {...productList.find(v => v.ProductID === p), quantity: obj[p]?.quantity ?
  obj[p].quantity + 1 : 1}; console.log(obj); return {...obj}; }, {});
  $('.cart-list').html(Object.values(renderList).map(product => ` <div
  class="card" style="flex: 25%; margin: 10px; min-width: 250px"> <div
  class="card-body d-flex flex-column justify-content-between"> <h5
  class="card-title fs-3">${product.ProductName}</h5> <p class="card-text"> <p
  class="m-0 fw-bold">${(parseInt(product.UnitPrice.replace('.','')) *
  product.quantity).toString().replace(/\B(?=(\d{4})+(?!\d))/g, ".")} vnÄ‘</p> <p
  class="m-0"><strong>Quantity:</strong> ${product.quantity}</p> <p
  class="m-0"><strong>Category:</strong> ${product.CategoryName}</p> </p> </div>
  </div> `).join(''))

</script>